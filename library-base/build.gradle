apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.didi.dokit'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'x86', 'armeabi', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //统一资源前缀，规范资源引用，局限于布局的资源文件
    resourcePrefix "base_"
    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility rootProject.ext.versions.java
        targetCompatibility rootProject.ext.versions.java
    }

}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api rootProject.ext.androidx["androidx.appcompat"]
    api rootProject.ext.androidx["androidx.constraintlayout"]
    api rootProject.ext.androidx["androidx.recyclerview"]
    api rootProject.ext.dependencies["lifecycle-extensions"]
    api rootProject.ext.dependencies["ARouterApi"]
    kapt rootProject.ext.dependencies["ARouterCompiler"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["conver-gson"]
    api rootProject.ext.dependencies["jakewharton-retrofit-adapter"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["smart-refresh"]
    api rootProject.ext.dependencies["smert-refresh-header"]
    api rootProject.ext.dependencies["logger"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["logger-intercept"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.androidx["material"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["immersionbar"]
    api rootProject.ext.dependencies["immersionbar-components"]
    api rootProject.ext.dependencies["magic-indicator"]
    api rootProject.ext.dependencies["bindingcollectionadapter"]
    api rootProject.ext.dependencies["bindingcollectionadapter-recyclerview"]
    api rootProject.ext.dependencies["flowlayout"]
    api rootProject.ext.dependencies["mmkv"]
    api rootProject.ext.dependencies["banner"]
    api rootProject.ext.dependencies["roundImageView"]
    api rootProject.ext.dependencies["edit-text-layout"]
    api rootProject.ext.dependencies["utilcodex"]
//    api rootProject.ext.dependencies["wx-pay"]
//    api rootProject.ext.dependencies["ali-pay"]
    api rootProject.ext.dependencies["dq-toolbar"]
    api rootProject.ext.dependencies["android-pickerview"]
//    api rootProject.ext.dependencies["dq-common-utils"]
    api rootProject.ext.dependencies["viewmodel-ktx"]
    api rootProject.ext.dependencies["dq-log"]
    implementation project(":library-res")
    debugImplementation "com.didichuxing.doraemonkit:doraemonkit:3.2.0"
    releaseImplementation "com.didichuxing.doraemonkit:doraemonkit-no-op:3.2.0"
    api rootProject.ext.dependencies["lifecycleScope"]
    //api rootProject.ext.dependencies["core-ktx"]
}
repositories {
    mavenCentral()
}
